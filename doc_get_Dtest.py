from threading import Thread
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import vk_api as vk_api
import bot_settings
import discord
from discord.ext import commands
import asyncio

# ==========================================================

Vk_message_is = False
Message_for_all = {"photo": None, 'text': [''], "doc": ['']}
user_get = ''


# ===================|–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞|========================================
def split_text_2(text: str, max_chars: int = 2000) -> list:
    """
    –†–∞–∑–¥–µ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ —Å–∏–º–≤–æ–ª–∞–º
    :param text: –¢–µ–∫—Å—Ç
    :param max_chars: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–∞—è –¥–ª–∏–Ω–∞ —á–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞
    """
    result = [text[i:i + max_chars] for i in range(0, len(text), max_chars)]
    return result


# =============================================================
def Get_photo():
    pass


def Get_doc(attachments):
    #  –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å attachments
    #  –∏ –∏–∑ –Ω–µ–≥–æ –Ω–∞ –≤—ã—Ö–æ–¥–µ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞
    #  –≤—ã–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å url –Ω–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π –¥–æ–∫
    doc_list = []
    for i in range(len(attachments)):
        if attachments[i]['type'] == "doc":
            doc_list.append(attachments[i]['doc']['url'])
    print('DOC_LIST = ' + str(doc_list))
    return doc_list
def get_fwd_rec(fwd_messages,rtn = None):

    c = (f"–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π: {fwd_messages}")
    print(c)
    if len(fwd_messages['fwd_messages']) !=0: # –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–∏–∫–ª for –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–±–µ–≥–∞–µ—Ç—Å—è –ø–æ –≤–µ—Ä—Ö–Ω–µ–º—É —É—Ä–æ–≤–Ω—é –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –¥–∞–ª—å—à–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö
        rtn = fwd_messages['fwd_messages']
    else:
        rtn = None
    return rtn


def Get_forwrd_message_text(message):
    res = message['fwd_messages']
    if len(res) != 0:
        while True:
            res = get_fwd_rec(res)
            if res == None:
                print('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π')
                break
    else:
        res = None
    return res




# ==================|discord\===============================


bot = commands.Bot(command_prefix=bot_settings.D_prefix)


@bot.event  # –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
async def on_ready():  # –ö–∞–∫ —Ç–æ–ª—å–∫–æ –±–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    print('Ready!')


# ===============================|Embed|===========================================
def createEmb(text='', photo=None, count="", doc=''):
    global user_get  # —Å–ª–æ–≤–∞—Ä—å —Å –∏–º–µ–Ω–µ–Ω–º –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

    embed_m = discord.Embed(title=f"‚Äº|–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è|‚Äº", description=f"‚¶Å ‚¶Å ‚¶Å\n{text}\n‚¶Å ‚¶Å ‚¶Å", color=0x00aad5)
    embed_m.set_thumbnail(url="https://sun9-73.userapi.com/impg/pIqm8Ca1gO25VwvtG0_TtPoWK_YWbWOadmzngQ/4FaZa1I7XIk.jpg?size=303x306&quality=96&sign=790a802a88c77ff996564f3679169411&type=album")
    if photo != None:  # –ï—Å–ª–∏ –ø–æ—Å—Ç—É–ø–∏–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–µ—Ç —Ñ–æ—Ç–æ
        embed_m.set_image(url=photo)
    if doc != '':
        for i in range(len(doc)):
            embed_m.add_field(name="üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç: " + str(doc[i]), value="üìú", inline=False)
    embed_m.set_footer(
        text=f"{user_get[0]['first_name']} {user_get[0]['last_name']}")  # –ø–æ–¥–ø–∏—Å—å –ø–æ–¥ –∫–∞–∂–¥—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∫—Ç–æ –±—ã–ª –∞–≤—Ç–æ—Ä–æ–º (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∞–≤—Ç–æ—Ä—Ç—Å–≤–æ)
    return embed_m


# ==================================================================================
async def sender():
    global Vk_message_is
    global Message_for_all

    await bot.wait_until_ready()

    channel = bot.get_channel(bot_settings.D_idChannel)


    while True:

        if Vk_message_is == True:
            try:
                for i in range(len(Message_for_all['text'])):
                    await channel.send(embed=createEmb(text=Message_for_all["text"][i], photo=Message_for_all["photo"],
                                                       count=str(i + 1), doc=Message_for_all["doc"]))
                    if i > 1:
                        Message_for_all[
                            "photo"] = None  # –î–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ñ–æ—Ç–∫—É –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —ç–º–±–µ–¥–æ–≤ —Å —Ç–µ–∫—Å—Ç–æ–º
                    Vk_message_is = False
            except IndexError:  # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ —Ç–æ —Ç—É—Ç –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É
                for i in range(len(Message_for_all['text'])):
                    print('–¢—Ä–∞–±–ª—ã —Å —Ñ–æ—Ç–æ')
                    await channel.send(embed=createEmb(text=Message_for_all['text'][i], count=str(i + 1)),
                                       doc=Message_for_all["doc"])
                    Vk_message_is = False
            else:  # –≤—Ä–æ–¥–µ –Ω–µ –Ω—É–∂–Ω–æ –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç
                Vk_message_is = False

    await asyncio.sleep(10)


# ===============|vk|===================================

token = bot_settings.Vk_token

vk_session = vk_api.VkApi(token=token)

session_api = vk_session.get_api()
longpoll = VkBotLongPoll(vk_session, bot_settings.Vk_idChat)
print('Vk is active')


# ===============|code|=========================
def bb1():
    bot.loop.create_task(sender())

    bot.run(bot_settings.D_token)


def bb2():
    global Vk_message_is
    global Message_for_all
    global user_get
    print('–û–∂–∏–¥–∞–µ–º...')

    while True:
        for event in longpoll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:

                if event.from_chat:
                    if "@all" in event.message.text.lower():

                        Message_for_all['text'] = split_text_2(event.message.text, max_chars=4096)  # –ë–µ—Ä—ë–º —Ç–µ–∫—Å—Ç
                        print(event.message)
                        # print("\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: "+ str(event.message.text)+"\n–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: "+str(datetime.utcfromtimestamp(event.message.date).strftime('%Y-%m-%d %H:%M:%S')+"(+ 4 —á–∞—Å–∞)") )

                        id = event.message.from_id
                        user_get = vk_session.method("users.get", {
                            "user_ids": id})  # first_name = user_get[0]['first_name'] or last_name = user_get[0]['last_name']

                        # –ë–µ—Ä—ë–º —Ñ–æ—Ç–æ (–ø–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ 1)
                        try:
                            photo = event.message["attachments"][0]["photo"]["sizes"][4]["url"]  # –ë–µ—Ä—ë–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é

                            Message_for_all[
                                'photo'] = photo  # –°–ª–æ–≤–∞—Ä—å –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≤ –¥—Å
                        except:
                            print('–§–æ—Ç–æ –û—Ç—Å—É—Ç–≤—É–µ—Ç')
                            photo = None
                            Message_for_all['photo'] = photo
                        # –±–µ—Ä—ë–º –¥–æ–∫—É–º–µ–Ω—Ç
                        # try:
                        # –ë–µ—Ä—ë–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                        Forward_msg = Get_forwrd_message_text(event.message)
                        print(Forward_msg)
                        Message_for_all['doc'] = Get_doc(event.message[
                                                             "attachments"])  # –°–ª–æ–≤–∞—Ä—å –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≤ –¥—Å
                        # except:
                        # 	print('–§–æ—Ç–æ –û—Ç—Å—É—Ç–≤—É–µ—Ç')
                        # 	photo = None
                        # 	Message_for_all['photo'] = photo
                        Vk_message_is = True


thr1 = Thread(target=bb1)
thr2 = Thread(target=bb2)

thr1.start()
thr2.start()
# +-------------+------------------------+
# |    Field    |         Limit          |
# +-------------+------------------------+
# | title       | 256 characters         |
# | description | 4096 characters*       |
# | fields      | Up to 25 field objects |
# | field.name  | 256 characters         |
# | field.value | 1024 characters        |
# | footer.text | 2048 characters        |
# | author.name | 256 characters         |
# +-------------+------------------------+
